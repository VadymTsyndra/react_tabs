{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","className","map","tab","id","title","classNames","href","onClick","content","App","useState","setSelectedTabId","objTab","ReactDOM","render","document","getElementById"],"mappings":"8LAcaA,EAAwB,SAAC,GAEhC,IADFC,EACC,EADDA,KAAMC,EACL,EADKA,cAAeC,EACpB,EADoBA,cAEvB,OACE,qCACE,oBAAIC,UAAU,QAAd,SACGH,EAAKI,KAAI,SAAAC,GAAG,OACXA,EAAIC,KAAOL,GAAX,0BAA+CI,EAAIE,YAIvD,sBAAK,UAAQ,gBAAb,UACE,qBAAKJ,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,oBACEF,UAAWK,IAAW,CACpB,YAAaH,EAAIC,KAAOL,IAE1B,UAAQ,MAJV,SAOE,mBACEQ,KAAI,WAAMJ,EAAIC,IACd,UAAQ,UACRI,QAAS,kBAAMR,EAAcG,IAH/B,SAKGA,EAAIE,SAPFF,EAAIC,WAcjB,qBAAKH,UAAU,QAAQ,UAAQ,aAA/B,SACGH,EAAKI,KAAI,SAAAC,GAAG,OACXA,EAAIC,KAAOL,GAAiBI,EAAIM,oBC5C/BX,G,kBAAO,CAClB,CAAEM,GAAI,QAASC,MAAO,QAASI,QAAS,eACxC,CAAEL,GAAI,QAASC,MAAO,QAASI,QAAS,eACxC,CAAEL,GAAI,QAASC,MAAO,QAASI,QAAS,iBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAS,SAAnD,mBAAOZ,EAAP,KAAsBa,EAAtB,KAQA,OACE,qBAAKX,UAAU,UAAf,SACE,cAAC,EAAD,CACEH,KAAMA,EACNC,cAAeA,EACfC,cAXgB,SAACa,GACjBA,EAAOT,KAAOL,GAChBa,EAAiBC,EAAOT,UCd9BU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7462ab7a.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport interface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (objTab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = (\n  { tabs, selectedTabId, onTabSelected },\n) => {\n  return (\n    <>\n      <h1 className=\"title\">\n        {tabs.map(tab => (\n          tab.id === selectedTabId && `Selected tab is ${tab.title}`\n        ))}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              <li\n                className={classNames({\n                  'is-active': tab.id === selectedTabId,\n                })}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => onTabSelected(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {tabs.map(tab => (\n            tab.id === selectedTabId && tab.content\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tabs, Tab } from './components/Tabs';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const onTabSelected = (objTab: Tab) => {\n    if (objTab.id !== selectedTabId) {\n      setSelectedTabId(objTab.id);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}